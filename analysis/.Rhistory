path <- '../data/cis_summary_data/muscleskeletal/thresh_80/ENSG00000112306.7_summary.txt'
all_data = readLines(path)
all_data
length(all_data)
strsplit(all_data[2], split='\t', perl=T)
strsplit(all_data[2], split='\t', perl=T)[[1]]
strsplit(all_data[2], split='\t', perl=T)[[1]][2]
as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])
strsplit(all_data[4], split='\t', perl=T)[[1]][2]
strsplit(all_data[6], split='\t', perl=T)[[1]][2]
strsplit(all_data[6], split='\t', perl=T)[[1]]
strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]
r = 1
as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
path <- '../data/cis_summary_data/muscleskeletal/thresh_80/ENSG00000112306.7_summary.txt'
all_data = readLines(path)
n.ind <- as.numeric(strsplit(all_data[2], split='\t', perl=T)[[1]][2])   #Number of independent measurements
chr <- as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])    #Chromosome number
gene <- strsplit(all_data[4], split='\t', perl=T)[[1]][2]    #Gene of interest
SNP <- strsplit(all_data[5], split='\t', perl=T)[[1]][2]    #eQTL of interest
Gene.names <- strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]   #Column names for Y'Y
n.genes <- length(Gene.names)    #Number of genes in the network
n.gene
n.genes
YtY <- array(NA, dim=c(n.genes, n.genes))   #Y'Y
for (r in 1:n.genes) {
YtY[r,] <- as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
}
YtY
as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])
as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])
as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])[5]
sxx <- as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])   #X'X, a scalar
YtX <- as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])    #Y'X, a vector
sxx
-1+sqrt(1+2*sxx/n.ind)
suff.stat <- list(SYY = YtY/n.ind, sxx = sxx/n.ind, SYX = YtX/n.ind, SY1 = rep(0, n.genes), mu.g = -1+sqrt(1+2*sxx/n.ind))
suff.stat
source("../code/SimulateNetworkExpression.R")
source("../code/directionality_CGM.R")
getwd()
source("../R/SimulateNetworkExpression.R")
source("../R/directionality_CGM.R")
path <- '../data/cis_summary_data/muscleskeletal/thresh_80/ENSG00000112306.7_summary.txt'
all_data = readLines(path)
n.ind <- as.numeric(strsplit(all_data[2], split='\t', perl=T)[[1]][2])   #Number of independent measurements
chr <- as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])    #Chromosome number
gene <- strsplit(all_data[4], split='\t', perl=T)[[1]][2]    #Gene of interest
SNP <- strsplit(all_data[5], split='\t', perl=T)[[1]][2]    #eQTL of interest
Gene.names <- strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]   #Column names for Y'Y
n.genes <- length(Gene.names)    #Number of genes in the network
YtY <- array(NA, dim=c(n.genes, n.genes))   #Y'Y
for (r in 1:n.genes) {
YtY[r,] <- as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
}
sxx <- as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])   #X'X, a scalar
YtX <- as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])    #Y'X, a vector
suff.stat <- list(SYY = YtY/n.ind, sxx = sxx/n.ind, SYX = YtX/n.ind, SY1 = rep(0, n.genes), mu.g = -1+sqrt(1+2*sxx/n.ind))
n.iter <- 3000
n.burn <- 1000
sigma.a <- 0.4
weights.sigma <- 1
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibbs
path <- '../data/cis_summary_data/muscleskeletal/thresh_80/ENSG00000105372.2_summary.txt'
all_data = readLines(path)
n.ind <- as.numeric(strsplit(all_data[2], split='\t', perl=T)[[1]][2])   #Number of independent measurements
chr <- as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])    #Chromosome number
gene <- strsplit(all_data[4], split='\t', perl=T)[[1]][2]    #Gene of interest
SNP <- strsplit(all_data[5], split='\t', perl=T)[[1]][2]    #eQTL of interest
Gene.names <- strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]   #Column names for Y'Y
n.genes <- length(Gene.names)    #Number of genes in the network
YtY <- array(NA, dim=c(n.genes, n.genes))   #Y'Y
for (r in 1:n.genes) {
YtY[r,] <- as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
}
sxx <- as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])   #X'X, a scalar
YtX <- as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])    #Y'X, a vector
suff.stat <- list(SYY = YtY/n.ind, sxx = sxx/n.ind, SYX = YtX/n.ind, SY1 = rep(0, n.genes), mu.g = -1+sqrt(1+2*sxx/n.ind))
n.iter <- 3000
n.burn <- 1000
sigma.a <- 0.4
weights.sigma <- 1
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibbs
n.genes
path
path <- '../data/cis_summary_data/muscleskeletal/thresh_80/ENSG00000138207.8_summary.txt'
all_data = readLines(path)
n.ind <- as.numeric(strsplit(all_data[2], split='\t', perl=T)[[1]][2])   #Number of independent measurements
chr <- as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])    #Chromosome number
gene <- strsplit(all_data[4], split='\t', perl=T)[[1]][2]    #Gene of interest
SNP <- strsplit(all_data[5], split='\t', perl=T)[[1]][2]    #eQTL of interest
Gene.names <- strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]   #Column names for Y'Y
n.genes <- length(Gene.names)    #Number of genes in the network
YtY <- array(NA, dim=c(n.genes, n.genes))   #Y'Y
for (r in 1:n.genes) {
YtY[r,] <- as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
}
sxx <- as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])   #X'X, a scalar
YtX <- as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])    #Y'X, a vector
suff.stat <- list(SYY = YtY/n.ind, sxx = sxx/n.ind, SYX = YtX/n.ind, SY1 = rep(0, n.genes), mu.g = -1+sqrt(1+2*sxx/n.ind))
n.iter <- 3000
n.burn <- 1000
sigma.a <- 0.4
weights.sigma <- 1
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibbs
gene
Gene.names
path <- '../data/cis_summary_data/muscleskeletal/thresh_80/ENSG00000197958.8_summary.txt'
all_data = readLines(path)
n.ind <- as.numeric(strsplit(all_data[2], split='\t', perl=T)[[1]][2])   #Number of independent measurements
chr <- as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])    #Chromosome number
gene <- strsplit(all_data[4], split='\t', perl=T)[[1]][2]    #Gene of interest
SNP <- strsplit(all_data[5], split='\t', perl=T)[[1]][2]    #eQTL of interest
Gene.names <- strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]   #Column names for Y'Y
n.genes <- length(Gene.names)    #Number of genes in the network
YtY <- array(NA, dim=c(n.genes, n.genes))   #Y'Y
for (r in 1:n.genes) {
YtY[r,] <- as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
}
sxx <- as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])   #X'X, a scalar
YtX <- as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])    #Y'X, a vector
suff.stat <- list(SYY = YtY/n.ind, sxx = sxx/n.ind, SYX = YtX/n.ind, SY1 = rep(0, n.genes), mu.g = -1+sqrt(1+2*sxx/n.ind))
n.iter <- 3000
n.burn <- 1000
sigma.a <- 0.4
weights.sigma <- 1
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibbs
gene
n.genes
path <- '../data/cis_summary_data/adiposesubcutaneous/thresh_80/ENSG00000197958.8_summary.txt'
all_data = readLines(path)
n.ind <- as.numeric(strsplit(all_data[2], split='\t', perl=T)[[1]][2])   #Number of independent measurements
chr <- as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])    #Chromosome number
gene <- strsplit(all_data[4], split='\t', perl=T)[[1]][2]    #Gene of interest
SNP <- strsplit(all_data[5], split='\t', perl=T)[[1]][2]    #eQTL of interest
Gene.names <- strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]   #Column names for Y'Y
n.genes <- length(Gene.names)    #Number of genes in the network
YtY <- array(NA, dim=c(n.genes, n.genes))   #Y'Y
for (r in 1:n.genes) {
YtY[r,] <- as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
}
sxx <- as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])   #X'X, a scalar
YtX <- as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])    #Y'X, a vector
suff.stat <- list(SYY = YtY/n.ind, sxx = sxx/n.ind, SYX = YtX/n.ind, SY1 = rep(0, n.genes), mu.g = -1+sqrt(1+2*sxx/n.ind))
n.iter <- 3000
n.burn <- 1000
sigma.a <- 0.4
weights.sigma <- 1
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibbs
path <- '../data/cis_summary_data/adiposesubcutaneous/thresh_80/ENSG00000197756.5_summary.txt'
all_data = readLines(path)
n.ind <- as.numeric(strsplit(all_data[2], split='\t', perl=T)[[1]][2])   #Number of independent measurements
chr <- as.numeric(strsplit(all_data[3], split='\t', perl=T)[[1]][2])    #Chromosome number
gene <- strsplit(all_data[4], split='\t', perl=T)[[1]][2]    #Gene of interest
SNP <- strsplit(all_data[5], split='\t', perl=T)[[1]][2]    #eQTL of interest
Gene.names <- strsplit(all_data[6], split='\t', perl=T)[[1]][2:length(strsplit(all_data[6], split='\t', perl=T)[[1]])]   #Column names for Y'Y
n.genes <- length(Gene.names)    #Number of genes in the network
YtY <- array(NA, dim=c(n.genes, n.genes))   #Y'Y
for (r in 1:n.genes) {
YtY[r,] <- as.numeric(strsplit(all_data[7+r], split='\t', perl=T)[[1]])
}
sxx <- as.numeric(strsplit(all_data[8+n.genes], split='\t', perl=T)[[1]][2])   #X'X, a scalar
YtX <- as.numeric(strsplit(all_data[10+n.genes], split='\t', perl=T)[[1]])    #Y'X, a vector
suff.stat <- list(SYY = YtY/n.ind, sxx = sxx/n.ind, SYX = YtX/n.ind, SY1 = rep(0, n.genes), mu.g = -1+sqrt(1+2*sxx/n.ind))
n.iter <- 3000
n.burn <- 1000
sigma.a <- 0.4
weights.sigma <- 1
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibbs
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibbs
sigma.a <- c(0.1, 0.2, 0.4)
weights.sigma <- c(1, 1, 1)
gibbs <- Gibbs.dir(n.iter, n.burn, suff.stat, which(Gene.names == gene), n.ind, sigma.a, weights.sigma, n.genes-1)
gibb
gibbs
mat <- matrix(rnorm(3e5*700), nrow=3e5, ncol=700)
dim(mat)
test <- t(mat) %*% mat
dim(test)
directory <- '~/Desktop/Uchicago/StephensGroup/TranseQTLs_EnglehardtStephens/GitWork/Trans-eQTL/data/cis_summary_data/adiposesubcutaneous/thresh_80'
Directory in which to perform the analysis
```{r}
directory <- '~/Desktop/Uchicago/StephensGroup/TranseQTLs_EnglehardtStephens/GitWork/Trans-eQTL/data/cis_summary_data/adiposesubcutaneous/thresh_80'
```
